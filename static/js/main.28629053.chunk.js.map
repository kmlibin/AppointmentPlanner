{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","onChange","value","map","contact","name","phone","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","type","e","target","placeholder","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","array","Object","values","className","data","index","TileList","objArr","AppointmentsPage","props","appointments","addAppointment","useState","preventDefault","ContactForm","setName","setPhone","email","setEmail","required","pattern","ContactsPage","addContact","duplicate","setDuplicate","useEffect","undefined","find","App","setContacts","setAppointments","ROUTES","to","activeClassName","exact","path","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28629053.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({contacts, onChange}) => {\r\n\r\n\r\n  return (\r\n    <select onChange={onChange}>\r\n      <option value=\"\">Select a contact</option>\r\n      {contacts.map(contact => (\r\n        <option value={contact.name}\r\n                key={contact.phone}>\r\n                {contact.name}\r\n                </option>)\r\n          )}\r\n    </select>\r\n\r\n  );\r\n};","import React from \"react\";\r\nimport { ContactPicker } from '../contactPicker/ContactPicker';\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder= \"Type of Appointment\"\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        value={date}\r\n        min={getTodayString()}\r\n        onChange={(e) => setDate(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"time\"\r\n        value={time}\r\n        onChange={(e) => setTime(e.target.value)}\r\n      />\r\n      <ContactPicker\r\n        contacts={contacts}\r\n        value={contact}\r\n        onChange={(e) => setContact(e.target.value)}\r\n      />\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};","import React from \"react\";\r\n\r\nexport const Tile = ({value}) => {\r\n  const array = Object.values(value);\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {array.map( (data, index) => {\r\n        if (index === 0 ) {\r\n          return <p className=\"tile-title\" key={index}>{data}</p>;\r\n        }\r\n          return <p className=\"tile\" key={index}>{data}</p>;\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport { Tile } from '../tile/Tile';\r\n\r\n\r\nexport const TileList = ({objArr}) => {\r\n  \r\n  return (\r\n    <div>\r\n      {objArr.map( (value, index) => <Tile value={value} key={index}/>)}\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport { useState } from 'react';\r\nimport { AppointmentForm } from '../../components/appointmentForm/AppointmentForm';\r\nimport { TileList } from '../../components/tileList/TileList';\r\n\r\nexport const AppointmentsPage = (props) => {\r\n  // Define state variables for appointment info\r\n  const appointments = props.appointments;\r\n  const contacts = props.contacts;\r\n  const addAppointment = props.addAppointment;\r\n  // local States\r\n  const [title, setTitle] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Add contact info and clear data \r\n    addAppointment(title, contact, date, time);\r\n    // reseting values\r\n    setTitle('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm \r\n          title={title}\r\n          setTitle={setTitle}\r\n          contact={contact}\r\n          setContact={setContact}\r\n          date={date}\r\n          setDate={setDate}\r\n          time={time}\r\n          setTime={setTime}\r\n          handleSubmit={handleSubmit}\r\n          contacts={contacts}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList objArr={appointments}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\" \r\n        value={name}\r\n        onChange={(e) => {setName(e.target.value)}}\r\n        required\r\n        placeholder =\"Client Name\"\r\n      />\r\n      <input \r\n        type=\"tel\"\r\n        value={phone}\r\n        pattern=\"^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$\"\r\n        onChange={(e) => {setPhone(e.target.value)}}\r\n        \r\n        placeholder=\"Phone Number\"\r\n      />\r\n      <input \r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) => {setEmail(e.target.value)}}\r\n        required\r\n        placeholder = \"Client Email\"\r\n      />\r\n      <input\r\n        type=\"submit\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ContactForm } from '../../components/contactForm/ContactForm'\r\nimport { TileList } from '../../components/tileList/TileList'\r\n \r\n\r\nexport const ContactsPage = ({contacts, addContact}) => {\r\n  // local states\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const nameIsDuplicate = () => {\r\n      const found = contacts.find((contact) => contact.name === name);\r\n      if (found !== undefined) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    if (nameIsDuplicate()) {\r\n      setDuplicate(true);\r\n    } else {\r\n      setDuplicate(false);\r\n    }\r\n  }, [name, contacts, duplicate]);\r\n\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Add contact info and clear data if the contact name is not a duplicate\r\n    if (!duplicate) {\r\n\r\n      addContact(name,phone, email);\r\n      // reseting values\r\n      setName('');\r\n      setPhone('');\r\n      setEmail('');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm \r\n          name={name}\r\n          phone={phone}\r\n          email={email}\r\n          setName={setName}\r\n          setPhone={setPhone}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList\r\n          objArr={contacts}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  // state variables for contacts and appointments \r\n  const [contacts, setContacts] =  useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  // functions to add data to contacts and appointments\r\n  const addContact = (name, phone, email ) => {\r\n    setContacts( prev => [...prev, {name, phone, email}]);\r\n  };\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointments( prev =>  [...prev, {title, contact, date, time}]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage \r\n              addContact={addContact}\r\n              contacts={contacts}\r\n              />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage \r\n              addAppointment={addAppointment}\r\n              appointments={appointments}\r\n              contacts={contacts}\r\n              />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}